{"version":3,"file":"pool-monitor-card.js","sources":["../src/locales/en.js","../src/locales/fr.js","../src/locales/es.js","../src/locales/de.js","../src/locales/it.js","../src/locales/nl.js","../src/locales/pt.js","../src/locales/pt-br.js","../src/locales/ro.js","../src/locales/sk.js","../src/locales/he.js","../src/locales/ru.js","../src/locales/translations.js","../src/configs/config.js","../src/constants.js","../src/styles/styles.js","../src/components/card-content.js","../src/pool_monitor_card.js"],"sourcesContent":["/**\r\n * @fileoverview English translations for the Pool Monitor Card\r\n * @description Contains all English language strings used in the card interface\r\n */\r\n\r\n/**\r\n * @const {Object} translations\r\n * @description English translation strings organized by category\r\n * @property {Object} state - Sensor state descriptions\r\n * @property {string} state.1 - Description for very low values\r\n * @property {string} state.2 - Description for low but acceptable values\r\n * @property {string} state.3 - Description for ideal lower range values\r\n * @property {string} state.4 - Description for ideal upper range values\r\n * @property {string} state.5 - Description for high but acceptable values\r\n * @property {string} state.6 - Description for very high values\r\n *\r\n * @property {Object} sensor - Sensor name translations\r\n * @property {string} sensor.temperature - Primary temperature sensor name\r\n * @property {string} sensor.temperature_2 - Secondary temperature sensor name\r\n * @property {string} sensor.ph - pH level sensor name\r\n * @property {string} sensor.orp - ORP (Oxidation Reduction Potential) sensor name\r\n * @property {string} sensor.tds - TDS (Total Dissolved Solids) sensor name\r\n * @property {string} sensor.salinity - Salinity sensor name\r\n * @property {string} sensor.cya - Cyanuric acid sensor name\r\n * @property {string} sensor.calcium - Calcium level sensor name\r\n * @property {string} sensor.phosphate - Phosphate level sensor name\r\n * @property {string} sensor.alkalinity - Alkalinity level sensor name\r\n * @property {string} sensor.free_chlorine - Free chlorine level sensor name\r\n * @property {string} sensor.total_chlorine - Total chlorine level sensor name\r\n * @property {string} sensor.pressure - Filter pressure sensor name\r\n * @property {string} sensor.specific_gravity - Specific gravity sensor name\r\n * @property {string} sensor.magnesium - Magnesium level sensor name\r\n * @property {string} sensor.water_level - Water level sensor name\r\n * @property {string} sensor.flow_rate - Flow rate sensor name\r\n * @property {string} sensor.uv_radiation - UV radiation sensor name\r\n * @property {string} sensor.product_volume - Product volume sensor name\r\n * @property {string} sensor.product_weight - Product weight sensor name\r\n * @property {string} sensor.ec - Electrical Conductivity sensor name\r\n *\r\n * @property {Object} time - Time-related translations (singular forms)\r\n * @property {string} time.seconds - Text for events that just happened\r\n * @property {string} time.minutes - Text format for minutes ago (uses {minutes} placeholder)\r\n * @property {string} time.hours - Text format for hours ago (uses {hours} placeholder)\r\n * @property {string} time.days - Text format for days ago (uses {days} placeholder)\r\n *\r\n * @property {Object} time_plural - Time-related translations (plural forms)\r\n * @property {string} time_plural.seconds - Text for events that just happened\r\n * @property {string} time_plural.minutes - Text format for minutes ago (uses {minutes} placeholder)\r\n * @property {string} time_plural.hours - Text format for hours ago (uses {hours} placeholder)\r\n * @property {string} time_plural.days - Text format for days ago (uses {days} placeholder)\r\n */\r\nexport default {\r\n  state: {\r\n    1: 'Too Low',\r\n    2: 'Acceptable Low',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Acceptable High',\r\n    6: 'Too High',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperature',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinity',\r\n    cya: 'Cyanuric Acid',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Phosphate',\r\n    alkalinity: 'Alkalinity',\r\n    free_chlorine: 'Free Chlorine',\r\n    total_chlorine: 'Total Chlorine',\r\n    pressure: 'Filter Pressure',\r\n    specific_gravity: 'Specific Gravity',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Water Level',\r\n    flow_rate: 'Flow Rate',\r\n    uv_radiation: 'UV Radiation',\r\n    product_volume: 'Product Volume',\r\n    product_weight: 'Product Weight',\r\n    ec: 'Electrical Conductivity',\r\n  },\r\n  time: {\r\n    seconds: 'just now',\r\n    minutes: '{minutes} minute ago',\r\n    hours: '{hours} hour ago',\r\n    days: '{days} day ago',\r\n  },\r\n  time_plural: {\r\n    seconds: 'just now',\r\n    minutes: '{minutes} minutes ago',\r\n    hours: '{hours} hours ago',\r\n    days: '{days} days ago',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Trop bas',\r\n    2: 'Acceptable bas',\r\n    3: 'Idéal',\r\n    4: 'Idéal',\r\n    5: 'Acceptable élevé',\r\n    6: 'Trop élevé',\r\n  },\r\n  sensor: {\r\n    temperature: 'Température',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinité',\r\n    cya: 'Acide cyanurique',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Phosphate',\r\n    alkalinity: 'Alcalinité',\r\n    free_chlorine: 'Chlore libre',\r\n    total_chlorine: 'Chlore total',\r\n    pressure: 'Pression du filtre',\r\n    specific_gravity: 'Densité spécifique',\r\n    magnesium: 'Magnésium',\r\n    water_level: \"Niveau d'eau\",\r\n    flow_rate: 'Débit',\r\n    uv_radiation: 'Radiation UV',\r\n    product_volume: 'Volume Produit',\r\n    product_weight: 'Poids Produit',\r\n    ec: 'Conductivité Électrique',\r\n  },\r\n  time: {\r\n    seconds: 'à l\\'instant',\r\n    minutes: 'il y a {minutes} minute',\r\n    hours: 'il y a {hours} heure',\r\n    days: 'il y a {days} jour',\r\n  },\r\n  time_plural: {\r\n    seconds: 'à l\\'instant',\r\n    minutes: 'il y a {minutes} minutes',\r\n    hours: 'il y a {hours} heures',\r\n    days: 'il y a {days} jours',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Demasiado bajo',\r\n    2: 'Aceptable bajo',\r\n    3: 'Perfecto',\r\n    4: 'Perfecto',\r\n    5: 'Aceptable alto',\r\n    6: 'Demasiado alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidad',\r\n    cya: 'Acido cianúrico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidad',\r\n    free_chlorine: 'Cloro libre',\r\n    total_chlorine: 'Cloro total',\r\n    pressure: 'Pressione du filter relativa',\r\n    specific_gravity: 'Densidad relativa',\r\n    magnesium: 'Magnesio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiación UV',\r\n    product_volume: 'Volumen Producto',\r\n    product_weight: 'Peso Producto',\r\n    ec: 'Conductividad Eléctrica',\r\n  },\r\n  time: {\r\n    seconds: 'justo ahora',\r\n    minutes: 'hace {minutes} minuto',\r\n    hours: 'hace {hours} hora',\r\n    days: 'hace {days} día',\r\n  },\r\n  time_plural: {\r\n    seconds: 'justo ahora',\r\n    minutes: 'hace {minutes} minutos',\r\n    hours: 'hace {hours} horas',\r\n    days: 'hace {days} días',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Zu niedrig',\r\n    2: 'Akzeptabler Tiefstwert',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Akzeptabler Hochwert',\r\n    6: 'Zu hoch',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatur',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salzgehalt',\r\n    cya: 'Cyanursäure',\r\n    calcium: 'Kalzium',\r\n    phosphate: 'Phosphat',\r\n    alkalinity: 'Alkalinität',\r\n    free_chlorine: 'Freies Chlor',\r\n    total_chlorine: 'Gesamtchlor',\r\n    pressure: 'Sandfilterdruck',\r\n    specific_gravity: 'Spezifisches Gewicht',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Wasserstand',\r\n    flow_rate: 'Durchfluss',\r\n    uv_radiation: 'UV-Strahlung',\r\n    product_volume: 'Produktvolumen',\r\n    product_weight: 'Produktgewicht',\r\n    ec: 'Elektrische Leitfähigkeit',\r\n  },\r\n  time: {\r\n    seconds: 'gerade erst',\r\n    minutes: 'vor {minutes} Minute',\r\n    hours: 'vor {hours} Stunde',\r\n    days: 'vor {days} Tag',\r\n  },\r\n  time_plural: {\r\n    seconds: 'gerade erst',\r\n    minutes: 'vor {minutes} Minuten',\r\n    hours: 'vor {hours} Stunden',\r\n    days: 'vor {days} Tagen',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Troppo basso',\r\n    2: 'Accettabile basso',\r\n    3: 'Ideale',\r\n    4: 'Ideale',\r\n    5: 'Accettabile alto',\r\n    6: 'Troppo alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinità',\r\n    cya: 'Acido cianurico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinità',\r\n    free_chlorine: 'Cloro libero',\r\n    total_chlorine: 'Cloro totale',\r\n    pressure: 'Pressione filtro',\r\n    specific_gravity: 'Gravità specifica',\r\n    magnesium: 'Magnesio',\r\n    water_level: \"Livello dell'acqua\",\r\n    flow_rate: 'Portata',\r\n    uv_radiation: 'Radiazione UV',\r\n    product_volume: 'Volume prodotto',\r\n    product_weight: 'Peso prodotto',\r\n    ec: 'Conducibilità Elettrica',\r\n  },\r\n  time: {\r\n    seconds: 'proprio ora',\r\n    minutes: '{minutes} minuto fa',\r\n    hours: '{hours} ora fa',\r\n    days: '{days} giorno fa',\r\n  },\r\n  time_plural: {\r\n    seconds: 'proprio ora',\r\n    minutes: '{minutes} minuti fa',\r\n    hours: '{hours} ore fa',\r\n    days: '{days} giorni fa',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Te laag',\r\n    2: 'Acceptabel laag',\r\n    3: 'Ideaal',\r\n    4: 'Ideaal',\r\n    5: 'Acceptabel hoog',\r\n    6: 'Te hoog',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatuur',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Zoutgehalte',\r\n    cya: 'Cyanuurzuur',\r\n    calcium: 'Calcium',\r\n    phosphate: 'Fosfaat',\r\n    alkalinity: 'Alkaliteit',\r\n    free_chlorine: 'Vrij chloor',\r\n    total_chlorine: 'Totaal chloor',\r\n    pressure: 'Filterdruk',\r\n    specific_gravity: 'Soortelijk gewicht',\r\n    magnesium: 'Magnesium',\r\n    water_level: 'Waterniveau',\r\n    flow_rate: 'Debiet',\r\n    uv_radiation: 'UV-straling',\r\n    product_volume: 'Productvolume',\r\n    product_weight: 'Productgewicht',\r\n    ec: 'Elektrische Geleidbaarheid',\r\n  },\r\n  time: {\r\n    seconds: 'zojuist',\r\n    minutes: '{minutes} minuut geleden',\r\n    hours: '{hours} uur geleden',\r\n    days: '{days} dag geleden',\r\n  },\r\n  time_plural: {\r\n    seconds: 'zojuist',\r\n    minutes: '{minutes} minuten geleden',\r\n    hours: '{hours} uur geleden',\r\n    days: '{days} dagen geleden',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Muito Baixo',\r\n    2: 'Torelavel mas Baixo',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Toleravel mas Alto',\r\n    6: 'Muito Alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidade',\r\n    cya: 'Ácido cianúrico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidade',\r\n    free_chlorine: 'Cloro livres',\r\n    total_chlorine: 'Cloro total',\r\n    pressure: 'Pressão do filtro',\r\n    specific_gravity: 'Gravidade específica',\r\n    magnesium: 'Magnésio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiação UV',\r\n    product_volume: 'Volume Produto',\r\n    product_weight: 'Peso Produto',\r\n    ec: 'Condutividade Elétrica',\r\n  },\r\n  time: {\r\n    seconds: 'agora mesmo',\r\n    minutes: 'há {minutes} minuto',\r\n    hours: 'há {hours} hora',\r\n    days: 'há {days} dia',\r\n  },\r\n  time_plural: {\r\n    seconds: 'agora mesmo',\r\n    minutes: 'há {minutes} minutos',\r\n    hours: 'há {hours} horas',\r\n    days: 'há {days} dias',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Muito Baixo',\r\n    2: 'Aceitavel Baixo',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Aceitavel Alto',\r\n    6: 'Muito Alto',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatura',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinidade',\r\n    cya: 'Acido Cianurico',\r\n    calcium: 'Calcio',\r\n    phosphate: 'Fosfato',\r\n    alkalinity: 'Alcalinidade',\r\n    free_chlorine: 'Cloro Livre',\r\n    total_chlorine: 'Cloro Total',\r\n    pressure: 'Pressão no Filtro',\r\n    specific_gravity: 'Gravidade específica',\r\n    magnesium: 'Magnésio',\r\n    water_level: 'Nivel de agua',\r\n    flow_rate: 'Caudal',\r\n    uv_radiation: 'Radiação UV',\r\n    product_volume: 'Volume Produto',\r\n    product_weight: 'Peso Produto',\r\n    ec: 'Condutividade Elétrica',\r\n  },\r\n  time: {\r\n    seconds: 'agora mesmo',\r\n    minutes: 'há {minutes} minuto',\r\n    hours: 'há {hours} hora',\r\n    days: 'há {days} dia',\r\n  },\r\n  time_plural: {\r\n    seconds: 'agora mesmo',\r\n    minutes: 'há {minutes} minutos',\r\n    hours: 'há {hours} horas',\r\n    days: 'há {days} dias',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Prea mic',\r\n    2: 'Mic',\r\n    3: 'Ideal',\r\n    4: 'Ideal',\r\n    5: 'Mare',\r\n    6: 'Prea mare',\r\n  },\r\n  sensor: {\r\n    temperature: 'Temperatură',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinitate',\r\n    cya: 'Acid cianuric',\r\n    calcium: 'Calciu',\r\n    phosphate: 'Fosfat',\r\n    alkalinity: 'Alcalinitate',\r\n    free_chlorine: 'Clor liber',\r\n    total_chlorine: 'Clor total',\r\n    pressure: 'Presiune filtru',\r\n    specific_gravity: 'Greutate specifică',\r\n    magnesium: 'Magneziu',\r\n    water_level: 'Nivel apă',\r\n    flow_rate: 'Debit',\r\n    uv_radiation: 'Radiație UV',\r\n    product_volume: 'Volum produs',\r\n    product_weight: 'Greutate produs',\r\n    ec: 'Conductivitate Electrică',\r\n  },\r\n  time: {\r\n    seconds: 'chiar acum',\r\n    minutes: 'acum {minutes} minut',\r\n    hours: 'acum {hours} oră',\r\n    days: 'acum {days} zi',\r\n  },\r\n  time_plural: {\r\n    seconds: 'chiar acum',\r\n    minutes: 'acum {minutes} minute',\r\n    hours: 'acum {hours} ore',\r\n    days: 'acum {days} zile',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Príliš nízky',\r\n    2: 'Akceptovateľne nízky',\r\n    3: 'Ideálny',\r\n    4: 'Ideálny',\r\n    5: 'Akceptovateľne vysoký',\r\n    6: 'Príliš vysoký',\r\n  },\r\n  sensor: {\r\n    temperature: 'Teplota',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Salinita',\r\n    cya: 'Kyselina kyanurová',\r\n    calcium: 'Vápnik',\r\n    phosphate: 'Fosfát',\r\n    alkalinity: 'Alkalinita',\r\n    free_chlorine: 'Voľný chlór',\r\n    total_chlorine: 'Celkový chlór',\r\n    pressure: 'Tlak filtra',\r\n    specific_gravity: 'Špecifická hmotnosť',\r\n    magnesium: 'Magnézium',\r\n    water_level: 'Úroveň vody',\r\n    flow_rate: 'Prietok',\r\n    uv_radiation: 'UV žiarenie',\r\n    product_volume: 'Objem produktu',\r\n    product_weight: 'Hmotnosť produktu',\r\n    ec: 'Elektrická Vodivosť',\r\n  },\r\n  time: {\r\n    seconds: 'práve teraz',\r\n    minutes: 'pred {minutes} minútou',\r\n    hours: 'pred {hours} hodinou',\r\n    days: 'pred {days} dňom',\r\n  },\r\n  time_plural: {\r\n    seconds: 'práve teraz',\r\n    minutes: 'pred {minutes} minútami',\r\n    hours: 'pred {hours} hodinami',\r\n    days: 'pred {days} dňami',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'נמוך מדי',\r\n    2: 'נמוך מאוד',\r\n    3: 'אידיאלי',\r\n    4: 'אידיאלי',\r\n    5: 'גבוה מאוד',\r\n    6: 'גבוה מדי',\r\n  },\r\n  sensor: {\r\n    temperature: 'טמפרטורה',\r\n    ph: 'PH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'מליחות',\r\n    cya: 'חומצה ציאנורית',\r\n    calcium: 'סידן',\r\n    phosphate: 'פוספט',\r\n    alkalinity: 'אלקליניות',\r\n    free_chlorine: 'כלור חופשי',\r\n    total_chlorine: 'כלור כולל',\r\n    pressure: 'לחץ מסנן',\r\n    specific_gravity: 'משקל סגולי',\r\n    magnesium: 'מגנזיום',\r\n    water_level: 'מפלס מים',\r\n    flow_rate: 'קצב זרימה',\r\n    uv_radiation: 'קרינת UV',\r\n    product_volume: 'נפח מוצר',\r\n    product_weight: 'משקל מוצר',\r\n    ec: 'מוליכות חשמלית',\r\n  },\r\n  time: {\r\n    seconds: 'כרגע',\r\n    minutes: 'לפני {minutes} דקה',\r\n    hours: 'לפני {hours} שעה',\r\n    days: 'לפני {days} יום',\r\n  },\r\n  time_plural: {\r\n    seconds: 'כרגע',\r\n    minutes: 'לפני {minutes} דקות',\r\n    hours: 'לפני {hours} שעות',\r\n    days: 'לפני {days} ימים',\r\n  },\r\n};\r\n","export default {\r\n  state: {\r\n    1: 'Слишком низкий',\r\n    2: 'Приемлемо низкий',\r\n    3: 'Идеальный',\r\n    4: 'Идеальный',\r\n    5: 'Приемлемо высокий',\r\n    6: 'Слишком высокий',\r\n  },\r\n  sensor: {\r\n    temperature: 'Температура',\r\n    ph: 'pH',\r\n    orp: 'ORP',\r\n    tds: 'TDS',\r\n    salinity: 'Соленость',\r\n    cya: 'Циануровая кислота',\r\n    calcium: 'Кальций',\r\n    phosphate: 'Фосфаты',\r\n    alkalinity: 'Щелочность',\r\n    free_chlorine: 'Свободный хлор',\r\n    total_chlorine: 'Общий хлор',\r\n    pressure: 'Давление фильтра',\r\n    specific_gravity: 'Удельный вес',\r\n    magnesium: 'Магний',\r\n    water_level: 'Уровень воды',\r\n    flow_rate: 'Расход воды',\r\n    uv_radiation: 'УФ-излучение',\r\n    product_volume: 'Объем продукта',\r\n    product_weight: 'Вес продукта',\r\n    ec: 'Электропроводность',\r\n  },\r\n  time: {\r\n    seconds: 'только что',\r\n    minutes: '{minutes} минуту назад',\r\n    hours: '{hours} час назад',\r\n    days: '{days} день назад',\r\n  },\r\n  time_plural: {\r\n    seconds: 'только что',\r\n    minutes: '{minutes} минут назад',\r\n    hours: '{hours} часов назад',\r\n    days: '{days} дней назад',\r\n  },\r\n};\r\n","/**\r\n * @fileoverview Translation system for the Pool Monitor Card\r\n * @description Manages translations and localization for the card interface.\r\n * Supports multiple languages with fallback to English if a translation is missing.\r\n */\r\n\r\nimport en from './en.js';\r\nimport fr from './fr.js';\r\nimport es from './es.js';\r\nimport de from './de.js';\r\nimport it from './it.js';\r\nimport nl from './nl.js';\r\nimport pt from './pt.js';\r\nimport ptBR from './pt-br.js';\r\nimport ro from './ro.js';\r\nimport sk from './sk.js';\r\nimport he from './he.js';\r\nimport ru from './ru.js';\r\n\r\n/**\r\n * @const {Object} translations\r\n * @description Collection of all available translations indexed by language code\r\n * Supported languages:\r\n * - en: English\r\n * - fr: French\r\n * - es: Spanish\r\n * - de: German\r\n * - it: Italian\r\n * - nl: Dutch\r\n * - pt: Portuguese\r\n * - pt-br: Brazilian Portuguese\r\n * - ro: Romanian\r\n * - sk: Slovak\r\n * - he: Hebrew\r\n * - ru: Russian\r\n */\r\nexport const translations = {\r\n  en,\r\n  fr,\r\n  es,\r\n  de,\r\n  it,\r\n  nl,\r\n  pt,\r\n  'pt-br': ptBR,\r\n  ro,\r\n  sk,\r\n  he,\r\n  ru,\r\n};\r\n\r\n/**\r\n * @function getTranslation\r\n * @description Retrieves a translation for a given key in the specified language\r\n * @param {string} lang - Language code (e.g., 'en', 'fr')\r\n * @param {string} key - Translation key (can be nested using dot notation)\r\n * @returns {string} The translated text or the key itself if translation not found\r\n * @example\r\n * getTranslation('en', 'common.temperature') // returns \"Temperature\"\r\n * getTranslation('fr', 'common.temperature') // returns \"Température\"\r\n */\r\nexport const getTranslation = (lang, key) => {\r\n  const keys = key.split('.');\r\n  let result = translations[lang] || translations.en;\r\n\r\n  for (const k of keys) {\r\n    if (result && typeof result === 'object') {\r\n      result = result[k];\r\n    } else {\r\n      return key; // Fallback to key if translation not found\r\n    }\r\n  }\r\n\r\n  return result || key;\r\n};\r\n\r\n/**\r\n * @function formatTranslation\r\n * @description Formats a translation string by replacing placeholders with values\r\n * @param {string} translation - The translation string containing placeholders\r\n * @param {Object} values - Object containing values to replace placeholders\r\n * @returns {string} The formatted translation string\r\n * @example\r\n * formatTranslation(\"Hello {name}!\", { name: \"John\" }) // returns \"Hello John!\"\r\n */\r\nexport const formatTranslation = (translation, values) => {\r\n  if (!values) return translation;\r\n\r\n  return Object.entries(values).reduce((acc, [key, value]) => {\r\n    return acc.replace(`{${key}}`, value);\r\n  }, translation);\r\n};\r\n","/**\r\n * @fileoverview Configuration definitions for the Pool Monitor Card\r\n */\r\n\r\n/**\r\n * @const {Object} DEFAULT_CONFIG - Default configuration for the Pool Monitor Card\r\n * @property {Object} display - Display settings\r\n * @property {boolean} display.compact - Whether to use compact display mode\r\n * @property {boolean} display.show_names - Whether to show sensor names\r\n * @property {boolean} display.show_labels - Whether to show labels\r\n * @property {boolean} display.show_last_updated - Whether to show last updated time\r\n * @property {boolean} display.show_icons - Whether to show icons\r\n * @property {boolean} display.show_units - Whether to show measurement units\r\n * @property {boolean} display.gradient - Whether to show gradient background\r\n * @property {string} display.language - Language code for translations\r\n *\r\n * @property {Object} colors - Color configuration\r\n * @property {string} colors.low - Color for low values\r\n * @property {string} colors.warn - Color for warning values\r\n * @property {string} colors.normal - Color for normal values\r\n * @property {string} colors.cool - Color for cool values\r\n * @property {string} colors.marker - Color for markers\r\n * @property {string} colors.hi_low - Color for high/low indicators\r\n *\r\n * @property {Object} sensors - Sensor configurations\r\n */\r\nexport const DEFAULT_CONFIG = {\r\n  display: {\r\n    compact: false,\r\n    show_names: true,\r\n    show_labels: true,\r\n    show_last_updated: false,\r\n    show_icons: true,\r\n    show_units: true,\r\n    gradient: true,\r\n    language: 'en',\r\n  },\r\n\r\n  colors: {\r\n    low: '#fdcb6e',\r\n    warn: '#e17055',\r\n    normal: '#00b894',\r\n    cool: '#00BFFF',\r\n    marker: '#000000',\r\n    hi_low: '#00000099',\r\n  },\r\n\r\n  sensors: {\r\n    temperature: {\r\n      name: 'Temperature',\r\n      unit: '°C',\r\n      setpoint: 27,\r\n      step: 1,\r\n      mode: 'heatflow',\r\n    },\r\n    orp: {\r\n      name: 'ORP',\r\n      unit: 'mV',\r\n      setpoint: 700,\r\n      step: 50,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    ec: {\r\n      name: 'Electrical Conductivity',\r\n      unit: 'µS/cm',\r\n      setpoint: 4000,\r\n      step: 200,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    tds: {\r\n      name: 'TDS',\r\n      unit: 'g/L',\r\n      setpoint: 5,\r\n      step: 0.5,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    ph: {\r\n      name: 'pH',\r\n      unit: 'pH',\r\n      setpoint: 7.2,\r\n      step: 0.2,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    salinity: {\r\n      name: 'Salinity',\r\n      unit: 'ppm',\r\n      setpoint: 3000,\r\n      step: 500,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    cya: {\r\n      name: 'Cyanuric Acid',\r\n      unit: 'ppm',\r\n      setpoint: 40,\r\n      step: 10,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    calcium: {\r\n      name: 'Calcium',\r\n      unit: 'ppm',\r\n      setpoint: 300,\r\n      step: 100,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    phosphate: {\r\n      name: 'Phosphate',\r\n      unit: 'ppb',\r\n      setpoint: 50,\r\n      step: 10,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    alkalinity: {\r\n      name: 'Alkalinity',\r\n      unit: 'ppm',\r\n      setpoint: 100,\r\n      step: 20,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    free_chlorine: {\r\n      name: 'Free Chlorine',\r\n      unit: 'ppm',\r\n      setpoint: 3,\r\n      step: 0.5,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    total_chlorine: {\r\n      name: 'Total Chlorine',\r\n      unit: 'ppm',\r\n      setpoint: 3,\r\n      step: 0.5,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    pressure: {\r\n      name: 'Filter Pressure',\r\n      unit: 'psi',\r\n      setpoint: 12,\r\n      step: 2,\r\n      mode: 'centric',\r\n    },\r\n    specific_gravity: {\r\n      name: 'Specific Gravity',\r\n      unit: 'sg',\r\n      setpoint: 1.1,\r\n      step: 0.2,\r\n      mode: 'centric',\r\n    },\r\n    magnesium: {\r\n      name: 'Magnesium',\r\n      unit: 'ppm',\r\n      setpoint: 1200,\r\n      step: 100,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    water_level: {\r\n      name: 'Water Level',\r\n      unit: '%',\r\n      setpoint: 100,\r\n      step: 10,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    flow_rate: {\r\n      name: 'Flow Rate',\r\n      unit: 'm³/h',\r\n      setpoint: 10,\r\n      step: 1,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    uv_radiation: {\r\n      name: 'UV Radiation',\r\n      unit: 'mW/cm²',\r\n      setpoint: 4,\r\n      step: 1,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    product_volume: {\r\n      name: 'Product Volume',\r\n      unit: 'L',\r\n      setpoint: 20,\r\n      step: 5,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n    product_weight: {\r\n      name: 'Product Weight',\r\n      unit: 'kg',\r\n      setpoint: 25,\r\n      step: 5,\r\n      mode: 'centric',\r\n      min_limit: 0,\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * @function getSensorConfig\r\n * @description Get the sensor configuration for a specific sensor type\r\n * @param {string} type - The type of sensor to get configuration for\r\n * @returns {Object} The sensor configuration\r\n */\r\nexport function getSensorConfig(type) {\r\n  if (!SUPPORTED_SENSORS.includes(type)) {\r\n    throw new Error(`Unsupported sensor type: ${type}`);\r\n  }\r\n  return { ...DEFAULT_CONFIG.sensors[type] };\r\n}\r\n\r\n/**\r\n * @function getDisplayConfig\r\n * @description Get the display configuration settings\r\n * @returns {Object} The display configuration\r\n */\r\nexport function getDisplayConfig() {\r\n  return { ...DEFAULT_CONFIG.display };\r\n}\r\n\r\n/**\r\n * @function getColorConfig\r\n * @description Get the color configuration settings\r\n * @returns {Object} The color configuration\r\n */\r\nexport function getColorConfig() {\r\n  return { ...DEFAULT_CONFIG.colors };\r\n}\r\n\r\n/**\r\n * @const {string[]} SUPPORTED_SENSORS - List of supported sensor types\r\n * @description Array of sensor types supported by the card, derived from sensor configuration\r\n */\r\nexport const SUPPORTED_SENSORS = Object.keys(DEFAULT_CONFIG.sensors);\r\n","/**\r\n * @fileoverview Constants used throughout the Pool Monitor Card\r\n * @version ${VERSION}\r\n */\r\n\r\n/** @const {string} VERSION - Current version of the card */\r\nconst VERSION = '1.0.2';\r\n/* global __BUILD_TIMESTAMP__ */\r\n/** @const {string} BUILD_TIMESTAMP - Build timestamp for the card */\r\nconst BUILD_TIMESTAMP = __BUILD_TIMESTAMP__ || 'dev';\r\n\r\n/** @const {string} CARD_VERSION - Complete version string including build timestamp */\r\nexport const CARD_VERSION = `${VERSION} (${BUILD_TIMESTAMP})`;\r\n\r\n/**\r\n * @const {Object} CARD_INFO - Basic information about the card\r\n * @property {string} cardType - Type identifier for the card\r\n * @property {string} cardName - Display name of the card\r\n * @property {string} cardDescription - Detailed description of the card's functionality\r\n */\r\nexport const CARD_INFO = {\r\n  cardType: 'pool-monitor-card',\r\n  cardName: 'Pool Monitor Card',\r\n  cardDescription:\r\n    'The \"Pool Monitor Card\" is a home assistant plugin that provides information about the temperature, pH, and ORP levels of your swimming pool',\r\n};\r\n\r\n// Import supported sensors list from config\r\nexport { SUPPORTED_SENSORS } from './configs/config.js';\r\n\r\n/**\r\n * @const {Object} CONSOLE_STYLE - Styling configuration for console output\r\n * @property {string} title - CSS styling for the title in console\r\n * @property {string} version - CSS styling for the version in console\r\n */\r\nexport const CONSOLE_STYLE = {\r\n  title: 'color: white; background: green; font-weight: 700;',\r\n  version: 'color: green; background: white; font-weight: 700;',\r\n};\r\n","/**\r\n * @fileoverview Styles definition for the Pool Monitor Card\r\n * @description This file contains all CSS styles used in the Pool Monitor Card component.\r\n * The styles are defined using LitElement's CSS template literals and use Home Assistant's CSS variables\r\n * for consistent theming across the application.\r\n */\r\n\r\nvar LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\r\nvar css = LitElement.prototype.css;\r\n\r\n/**\r\n * @const {CSSResult} styles - CSS styles for the Pool Monitor Card\r\n * @description Defines all visual styles for the card including:\r\n * - Card layout and appearance\r\n * - Section layouts (normal and compact modes)\r\n * - Title styling\r\n * - Container layouts and positioning\r\n * - Marker and indicator styles\r\n * - Gradient and color transitions\r\n * - Responsive design adjustments\r\n *\r\n * Uses Home Assistant CSS variables for theming:\r\n * - --ha-card-background\r\n * - --ha-card-border-radius\r\n * - --ha-card-border-width\r\n * - --ha-card-box-shadow\r\n * - --primary-text-color\r\n */\r\nexport const styles = css`\r\n  /** Host element styles */\r\n  ha-card {\r\n    padding-top: 15px;\r\n    padding-right: 5px;\r\n  }\r\n\r\n  /** Section layouts */\r\n  .section {\r\n    padding-bottom: 10px;\r\n    padding: 0px;\r\n  }\r\n\r\n  .section-compact {\r\n    padding-bottom: 5px;\r\n    padding: 0px;\r\n  }\r\n\r\n  /** Title styles */\r\n  .pool-monitor-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    padding-left: 15px;\r\n    padding-bottom: 15px;\r\n    margin: 0;\r\n  }\r\n\r\n  /** Entity image container */\r\n  .pool-monitor-entity-img {\r\n    text-align: right;\r\n    width: 32px;\r\n    float: left;\r\n  }\r\n\r\n  /** Main container layouts */\r\n  .pool-monitor-container {\r\n    display: grid;\r\n    padding: 5px;\r\n    height: 15px;\r\n  }\r\n\r\n  .pool-monitor-container-values {\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    padding-top: 0px;\r\n    padding-left: 20px;\r\n    margin-top: -10px;\r\n  }\r\n\r\n  .pool-monitor-container-marker {\r\n    display: grid;\r\n    grid-template-columns: 10% repeat(6, 1fr) 5%;\r\n    padding: 10px;\r\n    grid-template-rows: 15px;\r\n    line-height: 15px;\r\n    position: relative;\r\n  }\r\n\r\n  .grid-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    padding: 0;\r\n    grid-template-rows: 15px;\r\n    line-height: 15px;\r\n    position: relative;\r\n    margin: 0px;\r\n  }\r\n\r\n  .pool-monitor-container-marker .marker {\r\n    text-align: center;\r\n    justify-self: center;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    padding-top: 5px;\r\n    border-radius: 5px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    transform: translateX(-50%);\r\n    white-space: nowrap;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n  }\r\n\r\n  .pool-monitor-container-marker .marker-state {\r\n    width: 60px;\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n\r\n  .pool-monitor-container-marker .triangle {\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    position: absolute;\r\n    bottom: 0px;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .grid-item {\r\n    padding: 7px 0;\r\n    margin: 0;\r\n  }\r\n\r\n  .grid-item-text-box {\r\n    font-size: 0.8em;\r\n    text-align: center;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .item-row {\r\n    grid-row: 1;\r\n  }\r\n\r\n  .cursor {\r\n    text-align: center;\r\n    justify-self: center;\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    color: black;\r\n    position: absolute;\r\n    z-index: 1;\r\n  }\r\n\r\n  .cursor-text {\r\n    margin-right: 5px;\r\n    position: absolute;\r\n    width: 200px;\r\n    height: 17px;\r\n    padding-left: 3px;\r\n    padding-right: 3px;\r\n    padding-top: 0px;\r\n    margin-top: -1px;\r\n    font-size: 11px;\r\n    font-weight: 500;\r\n    text-align: right;\r\n    color: black;\r\n    justify-self: right;\r\n    z-index: 1;\r\n  }\r\n\r\n  .progress-bar-child {\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .sensor-monitor-container {\r\n    position: relative;\r\n    height: 20px;\r\n    margin: 0px 0px 0px 0px;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .warning-message {\r\n    background-color: var(--warning-color, rgba(255, 152, 0, 0.1));\r\n    border-left: 4px solid var(--warning-color, #ff9800);\r\n    border-radius: 4px;\r\n    padding: 12px 16px;\r\n    margin: 8px 0;\r\n    color: var(--warning-text-color, var(--primary-text-color));\r\n    font-size: 0.95em;\r\n    line-height: 1.4;\r\n    display: flex;\r\n    align-items: center;\r\n    animation: fadeIn 0.3s ease-in-out;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .warning-message ha-icon {\r\n    color: var(--warning-color, #ff9800);\r\n    margin-right: 12px;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(-10px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\r\nvar html = LitElement.prototype.html;\r\n\r\n/**\r\n * @class cardContent\r\n * @description Class responsible for generating the HTML content of the pool monitor card\r\n */\r\nexport class cardContent {\r\n  /**\r\n   * @static\r\n   * @method generateTitle\r\n   * @description Generates the title section of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {string} [config.title] - Optional title to display\r\n   * @returns {TemplateResult} The rendered title HTML\r\n   */\r\n  static generateTitle(config) {\r\n    const title =\r\n      config.title !== undefined\r\n        ? html` <h1 class=\"pool-monitor-title\">${config.title}</h1> `\r\n        : html``;\r\n\r\n    return html`${title}`;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method generateBody\r\n   * @description Generates the main body content of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {Object} data - The sensor data to display\r\n   * @param {string} data.name - Sensor name\r\n   * @param {string} data.entity - Entity ID\r\n   * @param {string} data.color - Color for the marker\r\n   * @param {number} data.pct_marker - Percentage position for the marker\r\n   * @param {string} data.value - Current sensor value\r\n   * @param {string} data.unit - Unit of measurement\r\n   * @param {string} data.state - Current state text\r\n   * @param {string} data.side_align - Alignment direction\r\n   * @param {number} data.pct_state_step - Percentage position for state\r\n   * @param {boolean} data.hide_icon - Whether to hide the icon\r\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\r\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\r\n   * @param {string} [data.img_src] - Image source if is_mdi is false\r\n   * @returns {TemplateResult} The rendered body HTML\r\n   */\r\n  static generateBody(config, data) {\r\n    if (!data) {\r\n      return html` <div class=\"warning-message\">No sensor data available</div> `;\r\n    }\r\n    return html`\r\n      <!-- ##### ${data.name} section ##### -->\r\n      <div class=\"section\" @click=${() => cardContent._moreinfo(data.entity)}>\r\n        <div class=\"pool-monitor-container-marker\">\r\n          <div\r\n            class=\"marker\"\r\n            style=\"background-color: ${data.color} ;color: black;left: ${data.pct_marker}%;\"\r\n          >\r\n            ${data.value} ${data.unit}\r\n          </div>\r\n          <div\r\n            class=\"marker-state\"\r\n            style=\"font-size: 0.8em; padding-top: 5px;color:${data.color};width: 200px;padding-${data.side_align}:40px;text-align:${data.side_align};background-color:transparent ;${data.side_align}: ${data.pct_state_step}%;\"\r\n          >\r\n            ${data.state}\r\n          </div>\r\n          <div\r\n            class=\"triangle\"\r\n            style=\"border-top: 10px solid ${data.color} ;left: ${data.pct_marker}%;\"\r\n          ></div>\r\n        </div>\r\n        ${!data.hide_icon\r\n          ? html`\r\n              <div class=\"pool-monitor-entity-img\">\r\n                ${data.is_mdi\r\n                  ? html`\r\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 32px; height: 32px;\"></ha-icon>\r\n                    `\r\n                  : html` <img src=\"${data.img_src}\" style=\"width: 32px; height: 32px;\" /> `}\r\n              </div>\r\n            `\r\n          : ''}\r\n        <div class=\"pool-monitor-container\">\r\n          ${config.display.gradient\r\n            ? html`\r\n                <div\r\n                  class=\"progress-bar-child\"\r\n                  style=\"background: linear-gradient(to right,\r\n              ${data.mode === 'heatflow'\r\n                    ? `${config.colors.cool} 15%,\r\n                 ${config.colors.low} 50%,\r\n                 ${config.colors.warn} 85%`\r\n                    : `${config.colors.warn} 5%,\r\n                 ${config.colors.low} 30%,\r\n                 ${config.colors.normal},\r\n                 ${config.colors.normal},\r\n                 ${config.colors.low} 70%,\r\n                 ${config.colors.warn} 95%`}\r\n            );\"\r\n                ></div>\r\n              `\r\n            : html`\r\n                <div class=\"grid-container\">\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                </div>\r\n                <div\r\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\r\n                >\r\n                  <span>${data.min}</span>\r\n                  <span>${data.max}</span>\r\n                </div>\r\n              `}\r\n          ${data.pct_min !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-left: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_min}%;\"\r\n              ></div>`\r\n            : ''}\r\n          ${data.pct_max !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-right: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${data.side_align}: ${data.pct_max}%;\"\r\n              ></div>`\r\n            : ''}\r\n        </div>\r\n        <div class=\"pool-monitor-container-values\">\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\r\n            class=\"grid-item item-row\"\r\n          >\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[0]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[1]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\r\n            <div\r\n              style=\"font-size: 0.8em;color:${config.colors\r\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\r\n            >\r\n              ${data.setpoint_class[2]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[3]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[4]}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\r\n            class=\"grid-item item-row\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div style=\"text-align:left;padding-left:15px;\">\r\n        ${data.title}<br /><small style=\"position: relative;top:-5px;font-size:9px;color:lightgrey\"\r\n          >${data.last_updated}</small\r\n        >\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method generateCompactBody\r\n   * @description Generates the compact body content of the card\r\n   * @param {Object} config - The card configuration\r\n   * @param {Object} data - The sensor data to display\r\n   * @param {string} data.name - Sensor name\r\n   * @param {string} data.entity - Entity ID\r\n   * @param {string} data.color - Color for the marker\r\n   * @param {number} data.pct_marker - Percentage position for the marker\r\n   * @param {string} data.value - Current sensor value\r\n   * @param {string} data.unit - Unit of measurement\r\n   * @param {string} data.state - Current state text\r\n   * @param {string} data.side_align - Alignment direction\r\n   * @param {number} data.pct_state_step - Percentage position for state\r\n   * @param {boolean} data.hide_icon - Whether to hide the icon\r\n   * @param {boolean} data.is_mdi - Whether the icon is an MDI icon\r\n   * @param {string} [data.mdi_icon] - MDI icon name if is_mdi is true\r\n   * @param {string} [data.img_src] - Image source if is_mdi is false\r\n   * @returns {TemplateResult} The rendered compact body HTML\r\n   */\r\n  static generateCompactBody(config, data) {\r\n    if (!data) {\r\n      return html` <div class=\"warning-message\">No sensor data available</div> `;\r\n    }\r\n    return html`\r\n      <!-- ##### ${data.name} section ##### -->\r\n      <div class=\"section-compact\" @click=${() => cardContent._moreinfo(data.entity)}>\r\n        ${!data.hide_icon\r\n          ? html`\r\n              <div class=\"pool-monitor-entity-img\">\r\n                ${data.is_mdi\r\n                  ? html`\r\n                      <ha-icon icon=\"${data.mdi_icon}\" style=\"width: 24px; height: 24px;\"></ha-icon>\r\n                    `\r\n                  : html` <img src=\"${data.img_src}\" style=\"width: 24px; height: 24px;\" /> `}\r\n              </div>\r\n            `\r\n          : ''}\r\n        <div class=\"pool-monitor-container\">\r\n          ${config.display.gradient\r\n            ? html`\r\n                <div\r\n                  class=\"progress-bar-child\"\r\n                  style=\"background: linear-gradient(to right,\r\n              ${data.mode === 'heatflow'\r\n                    ? `${config.colors.cool} 15%,\r\n                 ${config.colors.low} 50%,\r\n                 ${config.colors.warn} 85%`\r\n                    : `${config.colors.warn} 5%,\r\n                 ${config.colors.low} 30%,\r\n                 ${config.colors.normal},\r\n                 ${config.colors.normal},\r\n                 ${config.colors.low} 70%,\r\n                 ${config.colors.warn} 95%`}\r\n            );\"\r\n                ></div>\r\n              `\r\n            : html`\r\n                <div class=\"grid-container\">\r\n                  <!-- <div style=\"background-color: transparent; grid-column: 1 ; border: 0px; box-shadow:none\" class=\"grid-item item-row\"> <div style=\"font-size: 0.8em;color:lightgrey;text-align:left;margin:3px 2px 0 0 \">${data.unit}</div></div> -->\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 1; border-radius: 5px 0px 0px 5px\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 2;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 3;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.normal}; grid-column: 4;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors.low}; grid-column: 5;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                  <div\r\n                    style=\"background-color: ${config.colors\r\n                      .warn}; grid-column: 6; border-radius: 0px 5px 5px 0px;\"\r\n                    class=\"grid-item item-row\"\r\n                  ></div>\r\n                </div>\r\n                <div\r\n                  style=\"display: flex; justify-content: space-between; margin: 0 10px; font-size: 0.7em; color: var(--secondary-text-color);\"\r\n                >\r\n                  <span>${data.min}</span>\r\n                  <span>${data.max}</span>\r\n                </div>\r\n              `}\r\n          <div\r\n            class=\"cursor-text\"\r\n            style=\"border-${data.side_align}: 5px solid ${config.marker}; text-align:${data.side_align};background-color:transparent; ${data.side_align === 'left' ? \"left:calc(37px + (100% - 42px) * \" + parseFloat(data.pct_cursor) / 100 + \");\" : \"right:calc(5px + (100% - 42px) * \" + (100 - parseFloat(data.pct_cursor)) / 100 + \");\"};\"\r\n          >\r\n            &nbsp; ${data.title} ${data.value} ${data.unit} ${data.separator} ${data.state} &nbsp;\r\n          </div>\r\n          ${data.pct_min !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-left: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${\"left:calc(37px + (100% - 42px) * \" + parseFloat(data.pct_min) / 100 + \");\"};\"\r\n              ></div>`\r\n            : ''}\r\n          ${data.pct_max !== data.pct_cursor\r\n            ? html`<div\r\n                class=\"cursor-text\"\r\n                style=\"border-right: 2px solid ${config.colors\r\n                  .hi_low}; border-top: 2px solid ${config.colors\r\n                  .hi_low}; border-bottom: 2px solid ${config.colors\r\n                  .hi_low}; width: 2px; height: 12px; text-align:${data.side_align}; background-color:transparent; ${\"right:calc(5px + (100% - 42px) * \" + (100 - parseFloat(data.pct_max)) / 100 + \");\"};\"\r\n              ></div>`\r\n            : ''}\r\n        </div>\r\n        <div class=\"pool-monitor-container-values\">\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 1 ; border-radius: 5px 0px 0px 5px\"\r\n            class=\"grid-item item-row\"\r\n          >\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[0]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 2 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[1]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 3 ;\" class=\"grid-item item-row\">\r\n            <div\r\n              style=\"font-size: 0.8em;color:${config.colors\r\n                .normal};text-align:right;margin:-5px 2px 0 0 \"\r\n            >\r\n              ${data.setpoint_class[2]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 4 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[3]}\r\n            </div>\r\n          </div>\r\n          <div style=\"background-color: transparent; grid-column: 5 ;\" class=\"grid-item item-row\">\r\n            <div style=\"font-size: 0.8em;text-align:right;margin:-5px 2px 0 0 \">\r\n              ${data.setpoint_class[4]}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"background-color: transparent; grid-column: 6 ; border-radius: 0px 5px 5px 0px;\"\r\n            class=\"grid-item item-row\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @static\r\n   * @method _moreinfo\r\n   * @description Dispatches a more-info event for the given entity\r\n   * @param {string} entity - Entity ID\r\n   */\r\n  static _moreinfo(entity) {\r\n    const event = new Event('hass-more-info', {\r\n      bubbles: true,\r\n      composed: true,\r\n    });\r\n    event.detail = { entityId: entity };\r\n    const homeAssistant = document.querySelector('home-assistant');\r\n    if (homeAssistant) {\r\n      homeAssistant.dispatchEvent(event);\r\n    }\r\n  }\r\n}\r\n","var LitElement = LitElement || Object.getPrototypeOf(customElements.get('ha-panel-lovelace'));\r\nvar html = LitElement.prototype.html;\r\n\r\nimport { getTranslation, formatTranslation } from './locales/translations.js';\r\nimport { CARD_VERSION, CARD_INFO, CONSOLE_STYLE, SUPPORTED_SENSORS } from './constants.js';\r\nimport { styles } from './styles/styles.js';\r\nimport { cardContent } from './components/card-content.js';\r\nimport { getSensorConfig, getDisplayConfig, getColorConfig } from './configs/config.js';\r\n\r\nconsole.info(\r\n  `%c POOL-MONITORING-CARD %c ${CARD_VERSION} `,\r\n  CONSOLE_STYLE.title,\r\n  CONSOLE_STYLE.version,\r\n);\r\n\r\n/**\r\n * @class PoolMonitorCard\r\n * @extends {LitElement}\r\n * @description Custom Home Assistant card for monitoring pool sensors and displaying pool-related information\r\n * @property {Object} hass - Home Assistant instance\r\n * @property {Object} config - Card configuration\r\n * @version ${CARD_VERSION}\r\n */\r\nexport class PoolMonitorCard extends LitElement {\r\n  static cardType = CARD_INFO.cardType;\r\n  static cardName = CARD_INFO.cardName;\r\n  static cardDescription = CARD_INFO.cardDescription;\r\n\r\n  /**\r\n   * @static\r\n   * @returns {Object} Properties definition for the card\r\n   */\r\n  static get properties() {\r\n    return {\r\n      hass: {},\r\n      config: {},\r\n    };\r\n  }\r\n\r\n  static styles = styles;\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * @method render\r\n   * @description Renders the pool monitor card content\r\n   * @returns {TemplateResult} The rendered HTML template\r\n   */\r\n  render() {\r\n    const config = this.getConfig();\r\n    const data = this.processData();\r\n    const generateContent = config.display.compact\r\n      ? cardContent.generateCompactBody\r\n      : cardContent.generateBody;\r\n\r\n    // Vérifier si nous avons des données valides\r\n    if (!data || Object.keys(data).length === 0) {\r\n      return html` <ha-card>\r\n        <div id=\"pool-monitor-card\">\r\n          <div class=\"warning-message\">\r\n            <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n            <span>No valid sensor data available</span>\r\n          </div>\r\n        </div>\r\n      </ha-card>`;\r\n    }\r\n\r\n    return html` <ha-card><div id=\"pool-monitor-card\">\r\n      ${cardContent.generateTitle(config)}\r\n      ${Object.values(data).map(sensorData => {\r\n        if (sensorData?.invalid) {\r\n          return html`\r\n            <div class=\"warning-message\">\r\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n              <span\r\n                >Sensor ${sensorData?.name || 'unknown'} is not supported. Please verify its\r\n                configuration and ensure it is compatible with the card.</span\r\n              >\r\n            </div>\r\n          `;\r\n        } else if (sensorData?.value === null) {\r\n          return html`\r\n            <div class=\"warning-message\">\r\n              <ha-icon icon=\"mdi:alert\"></ha-icon>\r\n              <span\r\n                >Entity ${sensorData?.entity || 'unknown'} could not be found. Please verify its\r\n                name and ensure the entity is properly configured.</span\r\n              >\r\n            </div>\r\n          `;\r\n        }\r\n        return generateContent(config, sensorData);\r\n      })}\r\n    </div></ha-card>`;\r\n  }\r\n\r\n  /**\r\n   * @method processData\r\n   * @description Processes the sensor data for the card\r\n   * @returns {Object} The processed sensor data\r\n   */\r\n  processData() {\r\n    const data = {};\r\n    const config = this.getConfig();\r\n\r\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfigs]) => {\r\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\r\n      const sensorArray = Array.isArray(sensorConfigs) ? sensorConfigs : [sensorConfigs];\r\n\r\n      sensorArray.forEach((sensor, index) => {\r\n        const sensorKey = `${sensorType}_${index + 1}`;\r\n\r\n        data[sensorKey] = this.calculateData(\r\n          sensorType,\r\n          sensor.title || this.getTranslatedText('sensor.' + sensorType),\r\n          sensor.entity,\r\n          sensor.min,\r\n          sensor.max,\r\n          sensor.setpoint,\r\n          sensor.step,\r\n          sensor.unit,\r\n          sensor.icon,\r\n          sensor.image_url,\r\n          sensor.mode,\r\n          sensor.min_limit,\r\n          sensor.override_value,\r\n          sensor.override,\r\n          sensor.invalid,\r\n        );\r\n      });\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @method getTranslatedText\r\n   * @description Retrieves a translated text based on the provided key and values\r\n   * @param {string} key - The translation key\r\n   * @param {Object} values - The values to replace in the translation\r\n   * @returns {string} The translated text\r\n   */\r\n  getTranslatedText(key, values) {\r\n    const lang = this.config?.display.language || 'en';\r\n    const translation = getTranslation(lang, key);\r\n    return formatTranslation(translation, values);\r\n  }\r\n\r\n  /**\r\n   * @method calculateData\r\n   * @description Calculates the data for a single sensor\r\n   * @param {string} name - The sensor name\r\n   * @param {string} title - The sensor title\r\n   * @param {string} entity - The sensor entity\r\n   * @param {number} entity_min - The minimum entity value\r\n   * @param {number} entity_max - The maximum entity value\r\n   * @param {number} setpoint - The setpoint value\r\n   * @param {number} setpoint_step - The setpoint step value\r\n   * @param {string} unit - The unit of measurement\r\n   * @param {string} icon - The icon to display\r\n   * @param {string} image_url - The image URL to display\r\n   * @param {string} mode - The mode of the sensor\r\n   * @param {number} min_limit - The minimum limit value\r\n   * @param {number} override_value - The override value\r\n   * @param {boolean} override - Whether to override the value\r\n   * @param {boolean} invalid - Whether the sensor is invalid\r\n   * @returns {Object} The calculated sensor data\r\n   */\r\n  calculateData(\r\n    name,\r\n    title,\r\n    entity,\r\n    entity_min,\r\n    entity_max,\r\n    setpoint,\r\n    setpoint_step,\r\n    unit,\r\n    icon,\r\n    image_url,\r\n    mode,\r\n    min_limit,\r\n    override_value,\r\n    override,\r\n    invalid,\r\n  ) {\r\n    const newData = {};\r\n    const config = this.getConfig();\r\n    const defaultConfig = getSensorConfig(name) || {};\r\n\r\n    newData.name = name;\r\n    newData.invalid = invalid;\r\n    newData.mode = mode;\r\n\r\n    newData.title = config.display.show_names ? title : html`&nbsp;`;\r\n\r\n    // Gestion des icônes et images pour chaque capteur\r\n    newData.hide_icon = false;\r\n    newData.is_mdi = false;\r\n    if (!config.display.show_icons) {\r\n      newData.hide_icon = true;\r\n    } else {\r\n      const sensorIcon = icon || '';\r\n      const sensorImage = image_url || '';\r\n\r\n      if (sensorIcon === 'hide') {\r\n        newData.hide_icon = true;\r\n      } else if (sensorImage) {\r\n        newData.img_src = sensorImage;\r\n      } else if (sensorIcon && typeof sensorIcon === 'string' && sensorIcon.startsWith('mdi:')) {\r\n        newData.is_mdi = true;\r\n        newData.mdi_icon = sensorIcon;\r\n      } else {\r\n        newData.img_src = `https://raw.githubusercontent.com/sierramike/pool-monitor-card/master/resources/${name}.png`;\r\n      }\r\n    }\r\n\r\n    // Vérifier si l'entité existe\r\n    if (!this.hass || !this.hass.states || !this.hass.states[entity]) {\r\n      console.warn(`Entity not found: ${entity}`);\r\n      newData.value = null;\r\n      newData.entity = entity;\r\n      return newData;\r\n    }\r\n\r\n    const entityState = this.hass.states[entity];\r\n    // Get the configured precision from the entity's attributes\r\n    const precision = entityState.attributes?.display_precision ??\r\n                     entityState.attributes?.precision ??\r\n                     this.countDecimals(parseFloat(entityState.state));\r\n\r\n    // Parse and format the value with the configured precision\r\n    const rawValue = parseFloat(entityState.state);\r\n    newData.value = isNaN(rawValue) ? null : Number(rawValue.toFixed(precision));\r\n    newData.entity = entity;\r\n\r\n    if (config.display.show_last_updated) {\r\n      newData.last_updated = this.timeFromNow(entityState.last_updated);\r\n    }\r\n\r\n    // Utiliser l'unité de la configuration par défaut si non spécifiée\r\n    newData.unit = config.display.show_units ? unit || defaultConfig.unit || '' : '';\r\n\r\n    // Appliquer l'override après avoir lu la valeur du capteur\r\n    if (override) {\r\n      newData.value = override_value || defaultConfig.override;\r\n    }\r\n\r\n    // Vérifier les entités min/max\r\n    newData.min_value =\r\n      entity_min !== undefined &&\r\n      this.hass.states[entity_min] &&\r\n      !isNaN(parseFloat(this.hass.states[entity_min].state))\r\n        ? parseFloat(this.hass.states[entity_min].state)\r\n        : newData.value;\r\n\r\n    newData.max_value =\r\n      entity_max !== undefined &&\r\n      this.hass.states[entity_max] &&\r\n      !isNaN(parseFloat(this.hass.states[entity_max].state))\r\n        ? parseFloat(this.hass.states[entity_max].state)\r\n        : newData.value;\r\n\r\n    // Utiliser les valeurs par défaut de la configuration si non spécifiées\r\n    setpoint =\r\n      setpoint !== undefined\r\n        ? parseFloat(setpoint)\r\n        : defaultConfig.setpoint !== undefined\r\n          ? parseFloat(defaultConfig.setpoint)\r\n          : newData.value;\r\n    setpoint_step =\r\n      setpoint_step !== undefined\r\n        ? parseFloat(setpoint_step)\r\n        : defaultConfig.step !== undefined\r\n          ? parseFloat(defaultConfig.step)\r\n          : 0.1;\r\n\r\n    const countDecimals = Math.max(this.countDecimals(setpoint), this.countDecimals(setpoint_step));\r\n\r\n    newData.setpoint = setpoint;\r\n\r\n    // Calculate setpoint classes with min_limit consideration\r\n    const minLimit = min_limit !== undefined ? Number(min_limit) : -Infinity;\r\n    const sp_minus_2 = Math.max(minLimit, setpoint - 2 * setpoint_step);\r\n    const sp_minus_1 = Math.max(minLimit, setpoint - setpoint_step);\r\n    const sp = Math.max(minLimit, setpoint);\r\n    const sp_plus_1 = Math.max(minLimit, setpoint + setpoint_step);\r\n    const sp_plus_2 = Math.max(minLimit, setpoint + 2 * setpoint_step);\r\n\r\n    newData.setpoint_class = [\r\n      sp_minus_2.toFixed(countDecimals),\r\n      sp_minus_1.toFixed(countDecimals),\r\n      sp.toFixed(countDecimals),\r\n      sp_plus_1.toFixed(countDecimals),\r\n      sp_plus_2.toFixed(countDecimals),\r\n    ];\r\n\r\n    newData.separator = config.display.show_labels ? '-' : '';\r\n    newData.color = 'transparent';\r\n\r\n    // Ensure value respects min_limit\r\n    if (newData.value !== null) {\r\n      newData.value = Math.max(minLimit, newData.value);\r\n    }\r\n\r\n    if (mode === 'heatflow') {\r\n      // Three-level gradient for heatflow mode\r\n      if (Number(newData.value) < Number(newData.setpoint_class[1])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\r\n        newData.color = config.colors.cool;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[3])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\r\n        newData.color = config.colors.low;\r\n      } else {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\r\n        newData.color = config.colors.warn;\r\n      }\r\n    } else {\r\n      // Six-level gradient for default mode\r\n      if (Number(newData.value) < Number(newData.setpoint_class[0])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.1') : '';\r\n        newData.color = config.colors.warn;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[0]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[1])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.2') : '';\r\n        newData.color = config.colors.low;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[1]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[2])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.3') : '';\r\n        newData.color = config.colors.normal;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[2]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[3])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.4') : '';\r\n        newData.color = config.colors.normal;\r\n      } else if (\r\n        Number(newData.value) >= Number(newData.setpoint_class[3]) &&\r\n        Number(newData.value) < Number(newData.setpoint_class[4])\r\n      ) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.5') : '';\r\n        newData.color = config.colors.low;\r\n      } else if (Number(newData.value) >= Number(newData.setpoint_class[4])) {\r\n        newData.state = config.display.show_labels ? this.getTranslatedText('state.6') : '';\r\n        newData.color = config.colors.warn;\r\n      }\r\n    }\r\n    newData.progressClass = name === 'temperature' ? 'progress-temp' : 'progress';\r\n\r\n    newData.pct = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) * 100\r\n/*          0.85 *\r\n          100 +\r\n          15*/,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_min = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.min_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) * 100\r\n/*          0.85 *\r\n          100 +\r\n          15*/,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_max = Math.max(\r\n      0,\r\n      Math.min(\r\n        98.5,\r\n        (Math.max(0, newData.max_value - (setpoint - 3 * setpoint_step)) / (6 * setpoint_step)) * 100\r\n/*          0.85 *\r\n          100 +\r\n          15*/,\r\n      ),\r\n    ).toFixed(0);\r\n    newData.pct_marker = newData.value > newData.setpoint ? newData.pct - 12 : newData.pct - 5;\r\n    newData.side_align = newData.value > setpoint ? 'right' : 'left';\r\n/*    newData.pct_cursor =\r\n      newData.value > setpoint ? 100 - parseFloat(newData.pct) : parseFloat(newData.pct) - 2;*/\r\n    newData.pct_cursor = newData.pct;\r\n    newData.pct_state_step =\r\n      newData.value > setpoint ? 105 - parseFloat(newData.pct) : parseFloat(newData.pct) + 5;\r\n/*    newData.pct_min =\r\n      newData.value > setpoint\r\n        ? 100 - parseFloat(newData.pct_min)\r\n        : parseFloat(newData.pct_min) - 2;\r\n    newData.pct_max =\r\n      newData.value > setpoint\r\n        ? 100 - parseFloat(newData.pct_max)\r\n        : parseFloat(newData.pct_max) - 2;*/\r\n\r\n    return newData;\r\n  }\r\n\r\n  /**\r\n   * @method countDecimals\r\n   * @description Counts the number of decimal places in a number\r\n   * @param {number} number - The number to analyze\r\n   * @returns {number} The number of decimal places (0 if integer or invalid)\r\n   */\r\n  countDecimals(number) {\r\n    if (number === undefined || number === null) {\r\n      return 0;\r\n    }\r\n    if (Math.floor(number) === number) {\r\n      // si c'est un nombre entier\r\n      return 0;\r\n    }\r\n    const str = number.toString();\r\n    if (str.includes('.')) {\r\n      return str.split('.')[1].length || 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @method timeFromNow\r\n   * @description Calculates the time from now for a given date\r\n   * @param {string} dateTime - The date and time to calculate from\r\n   * @returns {string} The time from now\r\n   */\r\n  timeFromNow(dateTime) {\r\n    const date = new Date(dateTime);\r\n    const diff = Date.now() - date.getTime();\r\n\r\n    const t = (key, n) => {\r\n      const translationKey = n === 1 ? 'time' : 'time_plural';\r\n      const values = { [key]: n };\r\n      return this.getTranslatedText(`${translationKey}.${key}`, values);\r\n    };\r\n\r\n    const minutes = Math.floor(diff / 60000);\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (minutes < 1) return t('seconds', 0);\r\n    if (minutes < 60) return t('minutes', minutes);\r\n    if (hours < 24) return t('hours', hours);\r\n    return t('days', days);\r\n  }\r\n\r\n  /**\r\n   * @method getConfig\r\n   * @description Retrieves the card configuration\r\n   * @returns {Object} The card configuration\r\n   */\r\n  getConfig() {\r\n    return this.config;\r\n  }\r\n\r\n  /**\r\n   * @method setConfig\r\n   * @description Sets the card configuration\r\n   * @param {Object} config - The new card configuration\r\n   */\r\n  setConfig(config) {\r\n    // Utiliser la configuration par défaut de config.js\r\n    const defaultConfig = {\r\n      display: getDisplayConfig(),\r\n      colors: getColorConfig(),\r\n    };\r\n\r\n    // Merge avec la configuration utilisateur\r\n    const newConfig = {\r\n      ...config,\r\n      display: {\r\n        ...defaultConfig.display,\r\n        ...(config.display || {}),\r\n      },\r\n      colors: {\r\n        ...defaultConfig.colors,\r\n        ...(config.colors || {}),\r\n      },\r\n      // Créer une copie profonde de la configuration des sensors\r\n      sensors: {},\r\n    };\r\n\r\n    if (!config.sensors) {\r\n      console.warn(`Legacy configuration detected, please move sensors under \"sensors\" key`, {\r\n        config,\r\n      });\r\n      throw new Error(\r\n        'Legacy configuration detected. Please update your setup to define all sensors under the \"sensors\" key as required by the version 2.0 of the card.',\r\n      );\r\n    }\r\n\r\n    // Validation et transformation des capteurs\r\n    Object.entries(config.sensors).forEach(([sensorType, sensorConfig]) => {\r\n      // Obtenir la configuration par défaut pour ce type de capteur\r\n      const defaultSensorConfig = getSensorConfig(sensorType);\r\n\r\n      // Convertir en tableau si ce n'est pas déjà le cas (rétrocompatibilité)\r\n      const sensorArray = Array.isArray(sensorConfig) ? [...sensorConfig] : [{ ...sensorConfig }];\r\n\r\n      if (sensorArray.length === 0) {\r\n        throw new Error(`Empty sensor array for ${sensorType}`);\r\n      }\r\n\r\n      // Fusionner les valeurs par défaut pour chaque capteur du tableau\r\n      const mergedSensorArray = sensorArray.map(sensor => ({\r\n        ...defaultSensorConfig, // Valeurs par défaut\r\n        ...sensor, // Configuration utilisateur (écrase les valeurs par défaut)\r\n        nameDefinedByUser: !!sensor.name, // Ajoute un boolean si name défini par l'utilisateur\r\n      }));\r\n\r\n      mergedSensorArray.forEach((sensor, index) => {\r\n        if (!sensor.entity) {\r\n          throw new Error(`Missing entity for ${sensorType}[${index}]`);\r\n        }\r\n\r\n        // Si un nom est configuré, l'ajouter au titre\r\n        if (sensor.nameDefinedByUser) {\r\n          sensor.title = sensor.name;\r\n        }\r\n\r\n        // Vérifier si le sensor est supporté\r\n        if (!SUPPORTED_SENSORS.includes(sensorType)) {\r\n          console.warn(`Unsupported sensor type: ${sensorType}`, {\r\n            sensorType,\r\n            supportedSensors: SUPPORTED_SENSORS,\r\n            config: config,\r\n            sensorConfig: sensor,\r\n          });\r\n          sensor.invalid = true;\r\n        } else {\r\n          sensor.invalid = false;\r\n        }\r\n      });\r\n\r\n      // Stocker le tableau de capteurs fusionnés dans le nouvel objet\r\n      newConfig.sensors[sensorType] = mergedSensorArray;\r\n    });\r\n\r\n    this.config = newConfig;\r\n  }\r\n}\r\n\r\ncustomElements.define('pool-monitor-card', PoolMonitorCard);\r\nwindow.customCards = window.customCards || [];\r\nwindow.customCards.push({ type: CARD_INFO.cardType, name: CARD_INFO.cardName, description: CARD_INFO.cardDescription });\r\n"],"names":["en","state","sensor","temperature","ph","orp","tds","salinity","cya","calcium","phosphate","alkalinity","free_chlorine","total_chlorine","pressure","specific_gravity","magnesium","water_level","flow_rate","uv_radiation","product_volume","product_weight","ec","time","seconds","minutes","hours","days","time_plural","fr","es","de","it","nl","pt","ptBR","ro","sk","he","ru","translations","getTranslation","lang","key","keys","split","result","k","formatTranslation","translation","values","Object","entries","reduce","acc","value","replace","DEFAULT_CONFIG","display","compact","show_names","show_labels","show_last_updated","show_icons","show_units","gradient","language","colors","low","warn","normal","cool","marker","hi_low","sensors","name","unit","setpoint","step","mode","min_limit","getSensorConfig","type","SUPPORTED_SENSORS","includes","Error","getDisplayConfig","getColorConfig","VERSION","BUILD_TIMESTAMP","CARD_VERSION","CARD_INFO","cardType","cardName","cardDescription","CONSOLE_STYLE","title","version","LitElement","getPrototypeOf","customElements","get","css","prototype","styles","html","cardContent","generateTitle","config","undefined","generateBody","data","_moreinfo","entity","color","pct_marker","side_align","pct_state_step","hide_icon","is_mdi","mdi_icon","img_src","min","max","pct_min","pct_cursor","pct_max","setpoint_class","last_updated","generateCompactBody","parseFloat","separator","event","Event","bubbles","composed","detail","entityId","homeAssistant","document","querySelector","dispatchEvent","console","info","PoolMonitorCard","static","properties","hass","constructor","super","render","this","getConfig","processData","generateContent","length","map","sensorData","invalid","forEach","sensorType","sensorConfigs","sensorArray","Array","isArray","index","sensorKey","calculateData","getTranslatedText","icon","image_url","override_value","override","entity_min","entity_max","setpoint_step","newData","defaultConfig","sensorIcon","sensorImage","startsWith","states","entityState","precision","attributes","display_precision","countDecimals","rawValue","isNaN","Number","toFixed","timeFromNow","min_value","max_value","Math","minLimit","Infinity","sp_minus_2","sp_minus_1","sp","sp_plus_1","sp_plus_2","progressClass","pct","number","floor","str","toString","dateTime","date","Date","diff","now","getTime","t","n","translationKey","setConfig","newConfig","sensorConfig","defaultSensorConfig","mergedSensorArray","nameDefinedByUser","supportedSensors","define","window","customCards","push","description"],"mappings":"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"}